问答

Q1:重载函数时常因语法错误造成编译错误，列出错误的函数重载方式。
A1:
1、参数为默认值
2、参数为取址时
3、返回类型不同

Q2:运算符重载的定义与一般函数的定义区别？
A2:在定义运算符重载时需使用operator关键字。

Q3:C++规定只能以成员函数的方式来定义的运算符？
A3: =   +=  -=  *=  /=  %=

Q4:程序使用非成员函数的方式定义运算符重载时，除了public区块的数据成员外，其他区块的成员
无法存取。如何解决？
A4:在类中把该运算符函数声明为友元函数

Q5:如何将二元运算符函数定义为成员以及非成员函数？
A5: 返回类型 operator运算符(数据类型 参数)

Q6:无法进行重载的运算符？
A6: sizeof()    ?:  ::  .*  .   #   ##

Q7:运算符重载定义？
A7:运算符可以视为一种函数，借助重载特性为该运算符定义不同的运算功能，还能将复杂的程序变得
更简单易懂。

Q8:声明运算符函数重载时，有哪些定义规则？
A8:
1、函数参数行内的个数必须符合原运算符的个数
2、运算符本身就有一元和二元的特性时，可以分别定义一元和二元运算符函数
3、运算符重载只是用来扩充基本运算符的功能，不能改变原先的优先级

Q9:使用重载赋值运算符函数时，必须的注意事项？
A9:赋值"="运算符函数必须是非静态的成员函数，其不能被派生类继承。

Q10:重载函数被调用时会根据不同的函数代码调用函数，函数重载必须取决什么条件进行编译？
A10:程序在编译阶段是根据重载函数的参数行不同而进行的，因此函数重载取决于参数串行的不同，
而非返回类型。

Q11:设计重载>>和<<运算符时，有什么注意事项？
A11:运算符左边必须要istream&或ostream&类型的操作数（如C9++内的cout或cin），
因此这两个运算符必须被重载成非成员函数。

Q12:定义重载运算符时注意哪几点？
A12:
1、重载运算符中的操作数至少有一个自定义类型的数据
2、不能自行定义新的运算符符号、
3、不能改变运算符的运算规则
4、了解哪些是可重载的运算符，哪些是不可重载的运算符