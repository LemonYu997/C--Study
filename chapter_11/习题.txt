问答

Q1:this指针主要运用在何处？如何通过this指针来获取当前对象的内容？
A1:当创建对象后，对象会自动创建属于它自己的指针，即this指针。这个指针指向内存中存储该对象的地址，
通过它可以存取对象的数据成员及成员函数。this指针的使用方式与一般指针相同，语法如下：
this->数据成员;             //第一种方式
(*this).数据成员;           //第二种方式

Q2:什么是友元函数
A2:使用C++定义类时，在类内部的任何地方都可以使用"friend"关键字声明一些函数或类的原型，
它们并非类的成员，却可以直接存取类的任何数据，它们被称为类的"友元"，就好像是把此函数
当成类的成员函数，赋予存取类内私有成员的权力。

Q3:信息隐藏的意义？
A3:使用类可以实现抽象数据类型。所谓抽象，即将代表事物特征的数据隐藏起来，并定义一些
方法来作为操作这些数据的接口，让用户只能接触到这些方法，而无法直接使用数据，符合了
"信息隐藏"的真意。

Q4:什么是静态数据成员？
A4:在类中，当任何一个成员被声明为静态类型时，其他类中的对象都可以分享这个成员的数据。
当类中的数据成员被声明成静态后，该静态数据成员的值都将会保留下来，直到程序结束或下一次
该数据成员成员的值要被改变时。

Q5:什么是嵌套类？
A5:类中定义的类

Q6:什么是对象传引用调用方式？
A6:C++中对象传引用调用方式比传址调用的应用容易理解，因为它本身只是别名的应用。在使用对象
传引用调用时，只需要在函数原型和定义函数所要传递的参数前加上&运算符即可。
另外，引用是使用 "."来存取对象成员的。

Q7:C++封装最大的特色是什么？
A7:类内部私有数据只能由本身的成员函数存取，而其他函数不能从外面直接存取，这样才能保护类
本身的数据不被破坏，达到数据隐藏的目的。

Q8:被声明成static的数据成员在程序中是否一定要设置初值？
A8:一定。