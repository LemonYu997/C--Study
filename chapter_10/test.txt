问答

Q1:在类中，间接运算符(.)和直接运算符(->)有什么区别？
A1:间接运算符使用类的成员来获取变量值，直接运算符直接针对类成员内的内存地址获取变量值

Q2:默认构造函数和一般构造函数的不同
A2:每个类至少都有一个构造函数，当声明一个类时，如果没有定义构造函数，编译程序会自动生成默认
构造函数，其中不包含任何程序语句和参数

Q3:定义一个类，其中包含构造函数和析构函数
A3:
class Test1
{
    private:
        int *piVal;
    public:
        Test1()
        {
            cout << "执行构造函数\n" << endl;
            piVal = new int;
        }
        ~Test1()
        {
            cout << "执行析构函数\n" << endl;
            delete piVal;
        }
};


Q4:设计一个类的析构函数，使用new指令分配10个元素的内存空间，并设置其值，在析构函数内释放。
A4:
class Test2
{
    int *p;
    int i;

public:
    Test2()                     //构造函数
    {
        p = new int[10];        //分配内存空间
        int i;
        for (i = 0; i < 10; i++)
            p[i] = i;
        cout << "构造函数执行完成" << endl;
    }
    ~Test2()                    //析构函数
    {
        cout << "析构函数被调用，显示数组内容:" << endl;
        for (i = 0; i < 10; i++)
            cout << p[i] << " ";
        delete [] p;            //释放内存空间
        cout << "析构函数执行完成" << endl;
    }
};

Q5:简述面向对象程序设计OOP的特色
A5:将对象概念应用在软件开发模式中，OOP使程序设计更生活化、可读性更高。
程序更容易扩充、修改和维护。

Q6:C++的类和结构类型的区别
A6:类属于用户定义的抽象数据类型。
类的概念是从C中的结构类型衍生而来，二者的差别在于结构类型只能包含数据变量，
类类型可扩充到包含处理数据的函数。

Q7:什么是数据成员？
A7:数据成员主要用于描述类的状态，可以用任何数据类型将其定义在class内。
数据成员就是数据变量的部分，当定义数据成员时不可设置初值。

Q8:类存取权限关键字分为哪三种？
A8:private:属于私有成员，具有最高保护级别，成员只能被此对象的成员函数所存取。
protected:属于保护成员，具有第二保护级别。外界无法存取其成员，
主要让继承此类的新类能定义该成员的存取级别。
public:属于公有成员，最低保护级别，外界可对其成员存取。其成员是类提供给用户的接口，
可被其他对象或外部程序调用与存取。

Q9:范围解析运算符(::)的作用
A9:指出成员函数所属的类，在类外面实现成员函数时，
只要在外部定义函数名称前加上类名称与范围解析运算符::即可

